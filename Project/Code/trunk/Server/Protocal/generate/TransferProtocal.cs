// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TransferProtocal.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from TransferProtocal.proto</summary>
public static partial class TransferProtocalReflection {

  #region Descriptor
  /// <summary>File descriptor for TransferProtocal.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static TransferProtocalReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChZUcmFuc2ZlclByb3RvY2FsLnByb3RvIpQBCgtSZXF1ZXN0VHlwZRIPCgdy",
          "ZXF1ZXN0GAEgASgFInQKBFR5cGUSCAoETm9uZRAAEg0KCUxPR0lOX1JFURAB",
          "EhQKEFNBVkVfQVJDSElWRV9SRVEQAhITCg9HRVRfQVJDSElWRV9SRVEQAxIW",
          "ChJERUxFVEVfQVJDSElWRV9SRVEQBBIQCgxSRUdJU1RFUl9SRVEQBSKkAQoK",
          "UmVzdWx0VHlwZRIgCgZyZXN1bHQYASABKA4yEC5SZXN1bHRUeXBlLlR5cGUi",
          "dAoEVHlwZRIICgROb25lEAASDQoJTE9HSU5fUkVTEAESFAoQU0FWRV9BUkNI",
          "SVZFX1JFUxACEhMKD0dFVF9BUkNISVZFX1JFUxADEhYKEkRFTEVURV9BUkNI",
          "SVZFX1JFUxAEEhAKDFJFR0lTVEVSX1JFUxAFIjoKB0FjY291bnQSDwoHYWNj",
          "b3VudBgBIAEoCRIQCghwYXNzd29yZBgCIAEoCRIMCgRkYXRhGAMgASgMIocB",
          "CgtSZWdpc3RlclJlcxISCgpoYXNTdWNjZWVkGAEgASgIEiUKBWVycm9yGAIg",
          "ASgOMhYuUmVnaXN0ZXJSZXMuRXJyb3JUeXBlIj0KCUVycm9yVHlwZRIICgRO",
          "b25lEAASDQoJVVNFUl9FWElUEAESFwoTSU5WQUxJREFURURfQUNDT1VOVBAC",
          "IowBCghMb2dpblJlcxISCgpoYXNTdWNjZWVkGAEgASgIEiIKBWVycm9yGAIg",
          "ASgOMhMuTG9naW5SZXMuRXJyb3JUeXBlIkgKCUVycm9yVHlwZRIICgROb25l",
          "EAASGAoUSU5WQUxJREFURURfUEFTU1dPUkQQARIXChNJTlZBTElEQVRFRF9B",
          "Q0NPVU5UEAIiiwEKDEFyY2hpdmVPcFJlcxISCgpoYXNTdWNjZWVkGAEgASgI",
          "EicKCW9wZXJhdGlvbhgCIAEoDjIULkFyY2hpdmVPcFJlcy5PcFR5cGUSDAoE",
          "ZGF0YRgDIAEoDCIwCgZPcFR5cGUSCAoETm9uZRAAEgoKBkRFTEVURRABEgcK",
          "A0FERBACEgcKA0dFVBADYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RequestType), global::RequestType.Parser, new[]{ "Request" }, null, new[]{ typeof(global::RequestType.Types.Type) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ResultType), global::ResultType.Parser, new[]{ "Result" }, null, new[]{ typeof(global::ResultType.Types.Type) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::Account), global::Account.Parser, new[]{ "Account_", "Password", "Data" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RegisterRes), global::RegisterRes.Parser, new[]{ "HasSucceed", "Error" }, null, new[]{ typeof(global::RegisterRes.Types.ErrorType) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginRes), global::LoginRes.Parser, new[]{ "HasSucceed", "Error" }, null, new[]{ typeof(global::LoginRes.Types.ErrorType) }, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ArchiveOpRes), global::ArchiveOpRes.Parser, new[]{ "HasSucceed", "Operation", "Data" }, null, new[]{ typeof(global::ArchiveOpRes.Types.OpType) }, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class RequestType : pb::IMessage<RequestType> {
  private static readonly pb::MessageParser<RequestType> _parser = new pb::MessageParser<RequestType>(() => new RequestType());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RequestType> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TransferProtocalReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestType() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestType(RequestType other) : this() {
    request_ = other.request_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RequestType Clone() {
    return new RequestType(this);
  }

  /// <summary>Field number for the "request" field.</summary>
  public const int RequestFieldNumber = 1;
  private int request_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Request {
    get { return request_; }
    set {
      request_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RequestType);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RequestType other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Request != other.Request) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Request != 0) hash ^= Request.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Request != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Request);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Request != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Request);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RequestType other) {
    if (other == null) {
      return;
    }
    if (other.Request != 0) {
      Request = other.Request;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Request = input.ReadInt32();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the RequestType message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Type {
      [pbr::OriginalName("None")] None = 0,
      [pbr::OriginalName("LOGIN_REQ")] LoginReq = 1,
      [pbr::OriginalName("SAVE_ARCHIVE_REQ")] SaveArchiveReq = 2,
      [pbr::OriginalName("GET_ARCHIVE_REQ")] GetArchiveReq = 3,
      [pbr::OriginalName("DELETE_ARCHIVE_REQ")] DeleteArchiveReq = 4,
      [pbr::OriginalName("REGISTER_REQ")] RegisterReq = 5,
    }

  }
  #endregion

}

public sealed partial class ResultType : pb::IMessage<ResultType> {
  private static readonly pb::MessageParser<ResultType> _parser = new pb::MessageParser<ResultType>(() => new ResultType());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ResultType> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TransferProtocalReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResultType() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResultType(ResultType other) : this() {
    result_ = other.result_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ResultType Clone() {
    return new ResultType(this);
  }

  /// <summary>Field number for the "result" field.</summary>
  public const int ResultFieldNumber = 1;
  private global::ResultType.Types.Type result_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ResultType.Types.Type Result {
    get { return result_; }
    set {
      result_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ResultType);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ResultType other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Result != other.Result) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Result != 0) hash ^= Result.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Result != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) Result);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Result != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ResultType other) {
    if (other == null) {
      return;
    }
    if (other.Result != 0) {
      Result = other.Result;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          result_ = (global::ResultType.Types.Type) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the ResultType message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum Type {
      [pbr::OriginalName("None")] None = 0,
      [pbr::OriginalName("LOGIN_RES")] LoginRes = 1,
      [pbr::OriginalName("SAVE_ARCHIVE_RES")] SaveArchiveRes = 2,
      [pbr::OriginalName("GET_ARCHIVE_RES")] GetArchiveRes = 3,
      [pbr::OriginalName("DELETE_ARCHIVE_RES")] DeleteArchiveRes = 4,
      [pbr::OriginalName("REGISTER_RES")] RegisterRes = 5,
    }

  }
  #endregion

}

public sealed partial class Account : pb::IMessage<Account> {
  private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Account> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TransferProtocalReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Account() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Account(Account other) : this() {
    account_ = other.account_;
    password_ = other.password_;
    data_ = other.data_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Account Clone() {
    return new Account(this);
  }

  /// <summary>Field number for the "account" field.</summary>
  public const int Account_FieldNumber = 1;
  private string account_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Account_ {
    get { return account_; }
    set {
      account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 3;
  private pb::ByteString data_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Data {
    get { return data_; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Account);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Account other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Account_ != other.Account_) return false;
    if (Password != other.Password) return false;
    if (Data != other.Data) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Account_.Length != 0) hash ^= Account_.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (Data.Length != 0) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Account_.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Account_);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (Data.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Account_.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Account_);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (Data.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Account other) {
    if (other == null) {
      return;
    }
    if (other.Account_.Length != 0) {
      Account_ = other.Account_;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    if (other.Data.Length != 0) {
      Data = other.Data;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Account_ = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
        case 26: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  }

}

public sealed partial class RegisterRes : pb::IMessage<RegisterRes> {
  private static readonly pb::MessageParser<RegisterRes> _parser = new pb::MessageParser<RegisterRes>(() => new RegisterRes());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RegisterRes> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TransferProtocalReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterRes() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterRes(RegisterRes other) : this() {
    hasSucceed_ = other.hasSucceed_;
    error_ = other.error_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegisterRes Clone() {
    return new RegisterRes(this);
  }

  /// <summary>Field number for the "hasSucceed" field.</summary>
  public const int HasSucceedFieldNumber = 1;
  private bool hasSucceed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasSucceed {
    get { return hasSucceed_; }
    set {
      hasSucceed_ = value;
    }
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 2;
  private global::RegisterRes.Types.ErrorType error_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RegisterRes.Types.ErrorType Error {
    get { return error_; }
    set {
      error_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RegisterRes);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RegisterRes other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HasSucceed != other.HasSucceed) return false;
    if (Error != other.Error) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSucceed != false) hash ^= HasSucceed.GetHashCode();
    if (Error != 0) hash ^= Error.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HasSucceed != false) {
      output.WriteRawTag(8);
      output.WriteBool(HasSucceed);
    }
    if (Error != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Error);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasSucceed != false) {
      size += 1 + 1;
    }
    if (Error != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RegisterRes other) {
    if (other == null) {
      return;
    }
    if (other.HasSucceed != false) {
      HasSucceed = other.HasSucceed;
    }
    if (other.Error != 0) {
      Error = other.Error;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          HasSucceed = input.ReadBool();
          break;
        }
        case 16: {
          error_ = (global::RegisterRes.Types.ErrorType) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the RegisterRes message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum ErrorType {
      [pbr::OriginalName("None")] None = 0,
      [pbr::OriginalName("USER_EXIT")] UserExit = 1,
      [pbr::OriginalName("INVALIDATED_ACCOUNT")] InvalidatedAccount = 2,
    }

  }
  #endregion

}

public sealed partial class LoginRes : pb::IMessage<LoginRes> {
  private static readonly pb::MessageParser<LoginRes> _parser = new pb::MessageParser<LoginRes>(() => new LoginRes());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginRes> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TransferProtocalReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginRes() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginRes(LoginRes other) : this() {
    hasSucceed_ = other.hasSucceed_;
    error_ = other.error_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginRes Clone() {
    return new LoginRes(this);
  }

  /// <summary>Field number for the "hasSucceed" field.</summary>
  public const int HasSucceedFieldNumber = 1;
  private bool hasSucceed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasSucceed {
    get { return hasSucceed_; }
    set {
      hasSucceed_ = value;
    }
  }

  /// <summary>Field number for the "error" field.</summary>
  public const int ErrorFieldNumber = 2;
  private global::LoginRes.Types.ErrorType error_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LoginRes.Types.ErrorType Error {
    get { return error_; }
    set {
      error_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginRes);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginRes other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HasSucceed != other.HasSucceed) return false;
    if (Error != other.Error) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSucceed != false) hash ^= HasSucceed.GetHashCode();
    if (Error != 0) hash ^= Error.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HasSucceed != false) {
      output.WriteRawTag(8);
      output.WriteBool(HasSucceed);
    }
    if (Error != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Error);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasSucceed != false) {
      size += 1 + 1;
    }
    if (Error != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginRes other) {
    if (other == null) {
      return;
    }
    if (other.HasSucceed != false) {
      HasSucceed = other.HasSucceed;
    }
    if (other.Error != 0) {
      Error = other.Error;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          HasSucceed = input.ReadBool();
          break;
        }
        case 16: {
          error_ = (global::LoginRes.Types.ErrorType) input.ReadEnum();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the LoginRes message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum ErrorType {
      [pbr::OriginalName("None")] None = 0,
      [pbr::OriginalName("INVALIDATED_PASSWORD")] InvalidatedPassword = 1,
      [pbr::OriginalName("INVALIDATED_ACCOUNT")] InvalidatedAccount = 2,
    }

  }
  #endregion

}

public sealed partial class ArchiveOpRes : pb::IMessage<ArchiveOpRes> {
  private static readonly pb::MessageParser<ArchiveOpRes> _parser = new pb::MessageParser<ArchiveOpRes>(() => new ArchiveOpRes());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ArchiveOpRes> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::TransferProtocalReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArchiveOpRes() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArchiveOpRes(ArchiveOpRes other) : this() {
    hasSucceed_ = other.hasSucceed_;
    operation_ = other.operation_;
    data_ = other.data_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ArchiveOpRes Clone() {
    return new ArchiveOpRes(this);
  }

  /// <summary>Field number for the "hasSucceed" field.</summary>
  public const int HasSucceedFieldNumber = 1;
  private bool hasSucceed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool HasSucceed {
    get { return hasSucceed_; }
    set {
      hasSucceed_ = value;
    }
  }

  /// <summary>Field number for the "operation" field.</summary>
  public const int OperationFieldNumber = 2;
  private global::ArchiveOpRes.Types.OpType operation_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ArchiveOpRes.Types.OpType Operation {
    get { return operation_; }
    set {
      operation_ = value;
    }
  }

  /// <summary>Field number for the "data" field.</summary>
  public const int DataFieldNumber = 3;
  private pb::ByteString data_ = pb::ByteString.Empty;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Data {
    get { return data_; }
    set {
      data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ArchiveOpRes);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ArchiveOpRes other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (HasSucceed != other.HasSucceed) return false;
    if (Operation != other.Operation) return false;
    if (Data != other.Data) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (HasSucceed != false) hash ^= HasSucceed.GetHashCode();
    if (Operation != 0) hash ^= Operation.GetHashCode();
    if (Data.Length != 0) hash ^= Data.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (HasSucceed != false) {
      output.WriteRawTag(8);
      output.WriteBool(HasSucceed);
    }
    if (Operation != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Operation);
    }
    if (Data.Length != 0) {
      output.WriteRawTag(26);
      output.WriteBytes(Data);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (HasSucceed != false) {
      size += 1 + 1;
    }
    if (Operation != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
    }
    if (Data.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ArchiveOpRes other) {
    if (other == null) {
      return;
    }
    if (other.HasSucceed != false) {
      HasSucceed = other.HasSucceed;
    }
    if (other.Operation != 0) {
      Operation = other.Operation;
    }
    if (other.Data.Length != 0) {
      Data = other.Data;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          HasSucceed = input.ReadBool();
          break;
        }
        case 16: {
          operation_ = (global::ArchiveOpRes.Types.OpType) input.ReadEnum();
          break;
        }
        case 26: {
          Data = input.ReadBytes();
          break;
        }
      }
    }
  }

  #region Nested types
  /// <summary>Container for nested types declared in the ArchiveOpRes message type.</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static partial class Types {
    public enum OpType {
      [pbr::OriginalName("None")] None = 0,
      [pbr::OriginalName("DELETE")] Delete = 1,
      [pbr::OriginalName("ADD")] Add = 2,
      [pbr::OriginalName("GET")] Get = 3,
    }

  }
  #endregion

}

#endregion


#endregion Designer generated code
